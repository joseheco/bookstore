{"ast":null,"code":"var _jsxFileName = \"/Users/herrera/Github/bookstore/src/components/Book.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { removeBook } from '../redux/books/books';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Book = _ref => {\n  _s();\n\n  let {\n    id,\n    author,\n    title,\n    category\n  } = _ref;\n  const dispatch = useDispatch();\n\n  const remove = () => {\n    dispatch(removeBook(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Book\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"newBook\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"delBtn\",\n            onClick: () => {\n              remove(id);\n            },\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Book, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Book;\nBook.propTypes = {\n  id: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired\n};\nexport default Book;\n\nvar _c;\n\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"sources":["/Users/herrera/Github/bookstore/src/components/Book.js"],"names":["React","PropTypes","useDispatch","removeBook","Book","id","author","title","category","dispatch","remove","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,sBAA3B;;;;AAGA,MAAMC,IAAI,GAAG,QAEP;AAAA;;AAAA,MAFQ;AACZC,IAAAA,EADY;AACRC,IAAAA,MADQ;AACAC,IAAAA,KADA;AACOC,IAAAA;AADP,GAER;AACJ,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AACA,QAAMQ,MAAM,GAAG,MAAM;AACnBD,IAAAA,QAAQ,CAACN,UAAU,CAACE,EAAD,CAAX,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA,kCACE;AAAA,sBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,QAAhC;AAAyC,YAAA,OAAO,EAAE,MAAM;AAAEE,cAAAA,MAAM,CAACL,EAAD,CAAN;AAAa,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CArBD;;GAAMD,I;UAGaF,W;;;KAHbE,I;AAsBNA,IAAI,CAACO,SAAL,GAAiB;AACfN,EAAAA,EAAE,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UADN;AAEfP,EAAAA,MAAM,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UAFV;AAGfN,EAAAA,KAAK,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UAHT;AAIfL,EAAAA,QAAQ,EAAEP,SAAS,CAACW,MAAV,CAAiBC;AAJZ,CAAjB;AAMA,eAAeT,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { removeBook } from '../redux/books/books';\n\n\nconst Book = ({\n  id, author, title, category,\n}) => {\n  const dispatch = useDispatch();\n  const remove = () => {\n    dispatch(removeBook(id));\n  };\n  return (\n    <>\n      <div className=\"Book\">\n        <div>\n          <li className=\"newBook\">\n            <p>{title}</p>\n            <p>{author}</p>\n            <p>{category}</p>\n            <button type=\"button\" className=\"delBtn\" onClick={() => { remove(id); }}>Remove</button>\n          </li>\n        </div>\n      </div>\n    </>\n  );\n};\nBook.propTypes = {\n  id: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n};\nexport default Book;\n\n"]},"metadata":{},"sourceType":"module"}